Region us-east-1
AWS CloudFormation Template
You can save the AWS CloudFormation template in an existing S3 bucket in your account by selecting a bucket and clicking on the Save button below. Alternatively, you can cut and paste the template content below and store it locally or in your source control repository. NOTE: If you save the template to an S3 bucket in a different AWS region from the one used to create the template, launching it in the new AWS region will likely fail since the template may have hardcoded values based on the original AWS region.
Template Name 
VeritaSerum.CloudFormation.Template
 S3 Bucket 
ankitchadha29-bucket (us-east-1)

Btn save template Btn cancel
{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Resources": {
    "vpc0e98336b6cdf64d44": {
      "Type": "AWS::EC2::VPC",
      "Properties": {
        "CidrBlock": "10.0.0.0/16",
        "InstanceTenancy": "default",
        "EnableDnsSupport": "true",
        "EnableDnsHostnames": "false",
        "Tags": [
          {
            "Key": "Name",
            "Value": "AWS-Project-VPC-DoNotDelete"
          }
        ]
      }
    },
    "subnet0f07f292663b87a5e": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "10.0.1.0/24",
        "AvailabilityZone": "us-east-1a",
        "VpcId": {
          "Ref": "vpc0e98336b6cdf64d44"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "Radiology"
          }
        ]
      }
    },
    "subnet0782cd9a450a3f457": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "10.0.4.0/24",
        "AvailabilityZone": "us-east-1b",
        "VpcId": {
          "Ref": "vpc0e98336b6cdf64d44"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "Proton Therapy Backup"
          }
        ]
      }
    },
    "subnet02e2c835cc9e0c86e": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "10.0.3.0/24",
        "AvailabilityZone": "us-east-1b",
        "VpcId": {
          "Ref": "vpc0e98336b6cdf64d44"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "Radiology Backup"
          }
        ]
      }
    },
    "subnet084e63e843e35deb4": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "10.0.100.0/24",
        "AvailabilityZone": "us-east-1a",
        "VpcId": {
          "Ref": "vpc0e98336b6cdf64d44"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "Public-Test"
          }
        ]
      }
    },
    "subnet0b06d6464540ad097": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "10.0.2.0/24",
        "AvailabilityZone": "us-east-1a",
        "VpcId": {
          "Ref": "vpc0e98336b6cdf64d44"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "Proton Therapy"
          }
        ]
      }
    },
    "igw023e78c88c64b51d6": {
      "Type": "AWS::EC2::InternetGateway",
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "AWS-Project-IGW"
          }
        ]
      }
    },
    "dopte2022984": {
      "Type": "AWS::EC2::DHCPOptions",
      "Properties": {
        "DomainName": "ec2.internal",
        "DomainNameServers": [
          "AmazonProvidedDNS"
        ]
      }
    },
    "acl0e6bc2423e5393a52": {
      "Type": "AWS::EC2::NetworkAcl",
      "Properties": {
        "VpcId": {
          "Ref": "vpc0e98336b6cdf64d44"
        }
      }
    },
    "rtb0d001d7506f682a48": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "vpc0e98336b6cdf64d44"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "Public Route Table"
          }
        ]
      }
    },
    "rtb029d4c423b80af603": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "vpc0e98336b6cdf64d44"
        }
      }
    },
    "instancei0c2d29fcb7be876fa": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "DisableApiTermination": "false",
        "InstanceInitiatedShutdownBehavior": "stop",
        "ImageId": "ami-0947d2ba12ee1ff75",
        "InstanceType": "t2.micro",
        "KeyName": "MyUse1KP",
        "Monitoring": "false",
        "Tags": [
          {
            "Key": "Name",
            "Value": "Public server test"
          }
        ],
        "NetworkInterfaces": [
          {
            "DeleteOnTermination": "true",
            "Description": "Primary network interface",
            "DeviceIndex": 0,
            "SubnetId": {
              "Ref": "subnet084e63e843e35deb4"
            },
            "PrivateIpAddresses": [
              {
                "PrivateIpAddress": "10.0.100.78",
                "Primary": "true"
              }
            ],
            "GroupSet": [
              {
                "Ref": "sgPublicInstanceSG"
              }
            ],
            "AssociatePublicIpAddress": "true"
          }
        ]
      }
    },
    "instancei0d4dc99f89cbbf961": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "DisableApiTermination": "false",
        "InstanceInitiatedShutdownBehavior": "stop",
        "ImageId": "ami-0947d2ba12ee1ff75",
        "InstanceType": "t2.micro",
        "KeyName": "MyUse1KP",
        "Monitoring": "false",
        "Tags": [
          {
            "Key": "Name",
            "Value": "Radiology Server"
          }
        ],
        "NetworkInterfaces": [
          {
            "DeleteOnTermination": "true",
            "Description": "Primary network interface",
            "DeviceIndex": 0,
            "SubnetId": {
              "Ref": "subnet0f07f292663b87a5e"
            },
            "PrivateIpAddresses": [
              {
                "PrivateIpAddress": "10.0.1.34",
                "Primary": "true"
              }
            ],
            "GroupSet": [
              {
                "Ref": "sgRadiologySG"
              }
            ]
          }
        ]
      }
    },
    "instancei09cb38fa89d13e86b": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "DisableApiTermination": "false",
        "InstanceInitiatedShutdownBehavior": "stop",
        "ImageId": "ami-0947d2ba12ee1ff75",
        "InstanceType": "t2.micro",
        "KeyName": "MyUse1KP",
        "Monitoring": "false",
        "Tags": [
          {
            "Key": "Name",
            "Value": "Proton Therapy Server"
          }
        ],
        "NetworkInterfaces": [
          {
            "DeleteOnTermination": "true",
            "Description": "Primary network interface",
            "DeviceIndex": 0,
            "SubnetId": {
              "Ref": "subnet0b06d6464540ad097"
            },
            "PrivateIpAddresses": [
              {
                "PrivateIpAddress": "10.0.2.9",
                "Primary": "true"
              }
            ],
            "GroupSet": [
              {
                "Ref": "sgProtonTherapySG"
              }
            ]
          }
        ]
      }
    },
    "instancei07e0ed5dd66bab2a5": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "DisableApiTermination": "false",
        "InstanceInitiatedShutdownBehavior": "stop",
        "ImageId": "ami-0947d2ba12ee1ff75",
        "InstanceType": "t2.micro",
        "KeyName": "MyUse1KP",
        "Monitoring": "false",
        "Tags": [
          {
            "Key": "Name",
            "Value": "Radiology Backup Server"
          }
        ],
        "NetworkInterfaces": [
          {
            "DeleteOnTermination": "true",
            "Description": "Primary network interface",
            "DeviceIndex": 0,
            "SubnetId": {
              "Ref": "subnet02e2c835cc9e0c86e"
            },
            "PrivateIpAddresses": [
              {
                "PrivateIpAddress": "10.0.3.205",
                "Primary": "true"
              }
            ],
            "GroupSet": [
              {
                "Ref": "sgRadiologySG"
              }
            ]
          }
        ]
      }
    },
    "instancei0e1f1bdfbff4e0710": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "DisableApiTermination": "false",
        "InstanceInitiatedShutdownBehavior": "stop",
        "ImageId": "ami-0947d2ba12ee1ff75",
        "InstanceType": "t2.micro",
        "KeyName": "MyUse1KP",
        "Monitoring": "false",
        "Tags": [
          {
            "Key": "Name",
            "Value": "Proton Therapy Backup Server"
          }
        ],
        "NetworkInterfaces": [
          {
            "DeleteOnTermination": "true",
            "Description": "Primary network interface",
            "DeviceIndex": 0,
            "SubnetId": {
              "Ref": "subnet0782cd9a450a3f457"
            },
            "PrivateIpAddresses": [
              {
                "PrivateIpAddress": "10.0.4.35",
                "Primary": "true"
              }
            ],
            "GroupSet": [
              {
                "Ref": "sgProtonTherapySG"
              }
            ]
          }
        ]
      }
    },
    "topicBillingAlarm": {
      "Type": "AWS::SNS::Topic",
      "Properties": {
        "DisplayName": "BillingAlarm",
        "Subscription": [
          {
            "Endpoint": "ankitchadha29@gmail.com",
            "Protocol": "email"
          }
        ]
      }
    },
    "topicNotifyMe": {
      "Type": "AWS::SNS::Topic",
      "Properties": {
        "DisplayName": "NotifyMe",
        "Subscription": [
          {
            "Endpoint": "ankitchadha29@gmail.com",
            "Protocol": "email"
          }
        ]
      }
    },
    "sgProtonTherapySG": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "Proton-Therapy-SG",
        "VpcId": {
          "Ref": "vpc0e98336b6cdf64d44"
        }
      }
    },
    "sgRadiologySG": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "SG for Radiology instances",
        "VpcId": {
          "Ref": "vpc0e98336b6cdf64d44"
        }
      }
    },
    "sgPublicInstanceSG": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "Public-Instance-SG",
        "VpcId": {
          "Ref": "vpc0e98336b6cdf64d44"
        }
      }
    },
    "snspolicyBillingAlarm": {
      "Type": "AWS::SNS::TopicPolicy",
      "Properties": {
        "Topics": [
          {
            "Ref": "topicBillingAlarm"
          }
        ],
        "PolicyDocument": {
          "Version": "2008-10-17",
          "Id": "__default_policy_ID",
          "Statement": [
            {
              "Sid": "__default_statement_ID",
              "Effect": "Allow",
              "Principal": {
                "AWS": "*"
              },
              "Action": [
                "SNS:GetTopicAttributes",
                "SNS:SetTopicAttributes",
                "SNS:AddPermission",
                "SNS:RemovePermission",
                "SNS:DeleteTopic",
                "SNS:Subscribe",
                "SNS:ListSubscriptionsByTopic",
                "SNS:Publish",
                "SNS:Receive"
              ],
              "Resource": {
                "Ref": "topicBillingAlarm"
              },
              "Condition": {
                "StringEquals": {
                  "AWS:SourceOwner": "856230228820"
                }
              }
            }
          ]
        }
      }
    },
    "snspolicyNotifyMe": {
      "Type": "AWS::SNS::TopicPolicy",
      "Properties": {
        "Topics": [
          {
            "Ref": "topicNotifyMe"
          }
        ],
        "PolicyDocument": {
          "Version": "2008-10-17",
          "Id": "__default_policy_ID",
          "Statement": [
            {
              "Sid": "__default_statement_ID",
              "Effect": "Allow",
              "Principal": {
                "AWS": "*"
              },
              "Action": [
                "SNS:GetTopicAttributes",
                "SNS:SetTopicAttributes",
                "SNS:AddPermission",
                "SNS:RemovePermission",
                "SNS:DeleteTopic",
                "SNS:Subscribe",
                "SNS:ListSubscriptionsByTopic",
                "SNS:Publish",
                "SNS:Receive"
              ],
              "Resource": {
                "Ref": "topicNotifyMe"
              },
              "Condition": {
                "StringEquals": {
                  "AWS:SourceOwner": "856230228820"
                }
              }
            }
          ]
        }
      }
    },
    "acl1": {
      "Type": "AWS::EC2::NetworkAclEntry",
      "Properties": {
        "CidrBlock": "0.0.0.0/0",
        "Egress": "true",
        "Protocol": "-1",
        "RuleAction": "allow",
        "RuleNumber": "100",
        "NetworkAclId": {
          "Ref": "acl0e6bc2423e5393a52"
        }
      }
    },
    "acl2": {
      "Type": "AWS::EC2::NetworkAclEntry",
      "Properties": {
        "CidrBlock": "0.0.0.0/0",
        "Protocol": "-1",
        "RuleAction": "allow",
        "RuleNumber": "100",
        "NetworkAclId": {
          "Ref": "acl0e6bc2423e5393a52"
        }
      }
    },
    "subnetacl1": {
      "Type": "AWS::EC2::SubnetNetworkAclAssociation",
      "Properties": {
        "NetworkAclId": {
          "Ref": "acl0e6bc2423e5393a52"
        },
        "SubnetId": {
          "Ref": "subnet084e63e843e35deb4"
        }
      }
    },
    "subnetacl2": {
      "Type": "AWS::EC2::SubnetNetworkAclAssociation",
      "Properties": {
        "NetworkAclId": {
          "Ref": "acl0e6bc2423e5393a52"
        },
        "SubnetId": {
          "Ref": "subnet02e2c835cc9e0c86e"
        }
      }
    },
    "subnetacl3": {
      "Type": "AWS::EC2::SubnetNetworkAclAssociation",
      "Properties": {
        "NetworkAclId": {
          "Ref": "acl0e6bc2423e5393a52"
        },
        "SubnetId": {
          "Ref": "subnet0782cd9a450a3f457"
        }
      }
    },
    "subnetacl4": {
      "Type": "AWS::EC2::SubnetNetworkAclAssociation",
      "Properties": {
        "NetworkAclId": {
          "Ref": "acl0e6bc2423e5393a52"
        },
        "SubnetId": {
          "Ref": "subnet0f07f292663b87a5e"
        }
      }
    },
    "subnetacl5": {
      "Type": "AWS::EC2::SubnetNetworkAclAssociation",
      "Properties": {
        "NetworkAclId": {
          "Ref": "acl0e6bc2423e5393a52"
        },
        "SubnetId": {
          "Ref": "subnet0b06d6464540ad097"
        }
      }
    },
    "gw1": {
      "Type": "AWS::EC2::VPCGatewayAttachment",
      "Properties": {
        "VpcId": {
          "Ref": "vpc0e98336b6cdf64d44"
        },
        "InternetGatewayId": {
          "Ref": "igw023e78c88c64b51d6"
        }
      }
    },
    "subnetroute1": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "rtb0d001d7506f682a48"
        },
        "SubnetId": {
          "Ref": "subnet084e63e843e35deb4"
        }
      }
    },
    "route1": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "DestinationCidrBlock": "0.0.0.0/0",
        "RouteTableId": {
          "Ref": "rtb0d001d7506f682a48"
        },
        "GatewayId": {
          "Ref": "igw023e78c88c64b51d6"
        }
      },
      "DependsOn": "gw1"
    },
    "dchpassoc1": {
      "Type": "AWS::EC2::VPCDHCPOptionsAssociation",
      "Properties": {
        "VpcId": {
          "Ref": "vpc0e98336b6cdf64d44"
        },
        "DhcpOptionsId": {
          "Ref": "dopte2022984"
        }
      }
    },
    "ingress1": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgProtonTherapySG"
        },
        "IpProtocol": "tcp",
        "FromPort": "22",
        "ToPort": "22",
        "CidrIp": "192.168.2.0/24"
      }
    },
    "ingress2": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgRadiologySG"
        },
        "IpProtocol": "tcp",
        "FromPort": "22",
        "ToPort": "22",
        "CidrIp": "192.168.1.0/24"
      }
    },
    "ingress3": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgPublicInstanceSG"
        },
        "IpProtocol": "tcp",
        "FromPort": "22",
        "ToPort": "22",
        "CidrIp": "0.0.0.0/0"
      }
    },
    "egress1": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Properties": {
        "GroupId": {
          "Ref": "sgProtonTherapySG"
        },
        "IpProtocol": "-1",
        "CidrIp": "0.0.0.0/0"
      }
    },
    "egress2": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Properties": {
        "GroupId": {
          "Ref": "sgRadiologySG"
        },
        "IpProtocol": "-1",
        "CidrIp": "0.0.0.0/0"
      }
    },
    "egress3": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Properties": {
        "GroupId": {
          "Ref": "sgPublicInstanceSG"
        },
        "IpProtocol": "-1",
        "CidrIp": "0.0.0.0/0"
      }
    }
  },
  "Description": "AWS stack to get VeritaSerum team started with AWS "
}
